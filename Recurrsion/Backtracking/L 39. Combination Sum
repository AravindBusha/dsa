//39. Combination Sum


class Solution {
    public void fun(int[] candidates,int target,int index,List<Integer> ds,List<List<Integer>> res)
    {
        if(index==candidates.length)
        {
            if(target==0)
                res.add(new ArrayList<>(ds));
            return;
        }
        if(candidates[index]<=target)
        {
            ds.add(candidates[index]);
            fun(candidates,target-candidates[index],index,ds,res);
            ds.remove(ds.size()-1);
        }
        fun(candidates,target,index+1,ds,res);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        List<List<Integer>> res=new ArrayList<>();
        fun(candidates,target,0,new ArrayList<>(),res);
        return res;
    }
}
