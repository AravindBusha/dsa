/*
219. Contains Duplicate II
https://leetcode.com/problems/contains-duplicate-ii/

logic: 
    we use the sliding window of size K and take the min(k,nums.length)
    and add k length windows in to set 
    while adding only check is their any element already exists 
    then traverse the window then remove the i-k window and add ith side 
*/

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        k=Math.min(k+1,nums.length);
        HashSet<Integer> set = new HashSet<>();
        
        for(int i=0;i<k;i++) {
            if(set.contains(nums[i])) return true;
            set.add(nums[i]);
        }
        
        for(int i=k;i<nums.length;i++) {
            set.remove(nums[i-k]);
             if(set.contains(nums[i])) return true;
             set.add(nums[i]);
             

        }
        return false;
    }
}
