/*
763. Partition Labels

https://www.youtube.com/watch?v=HdZYFiz2exE


*/
/// class Solution {
//     public List<Integer> partitionLabels(String s) {
//         int len=s.length();
//         ArrayList<Integer> res=new ArrayList<>();
//         HashSet<Character> set=new HashSet<>();
//         int max=len-1;
//         int j=0;
//         for(int i=0;i<len;i++)
//         {
//             j=len-1;
//             if(i==max)
//                 res.add(j-i-1);
//             else if(set.contains(s.charAt(i)))
//                 continue;
//             else
//             {
//                 while(i<j)
//                 {
//                     if(s.charAt(i)==s.charAt(j))
//                     {
//                         max=Math.max(max,j);
                        
                        
//                     }
//                 }
//             }
//             set.add(s.charAt(i));    
//         }
//         return res;
//     }
// }


class Solution {
    public List<Integer> partitionLabels(String s) {
        Map<Character, Integer> map = new HashMap<>();
        // filling impact of character's
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            map.put(ch, i);
        }
        // making of result
        List<Integer> res = new ArrayList<>();
        int prev = -1;
        int max = 0;
        
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            max = Math.max(max, map.get(ch));
            if(max == i){
                // partition time
                res.add(max - prev);
                prev = max;
            }
        }
        return res;
    }
}
