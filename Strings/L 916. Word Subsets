/*
916. Word Subsets


first we traverse through the words2 and store the maximum freq of elements( max(freq(ele)) of words2)

if words2 =["oooe","eeeo"] then o is 3 and also e is 3

and then we have the freq of all elements in words2

and now we travese to the words1 and check it should have atleast the minimum freq count 

*/

class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
        int global[]=new int[26];
        ArrayList<String> res=new ArrayList<String>();
        for(String s: words2)
        {
            int local[]=new int[26];
            for(char c:s.toCharArray())
            {
                local[c-'a']+=1;
            }
            for(int i=0;i<26;i++)
                global[i]=Math.max(global[i],local[i]);
        }
        // System.out.println(Arrays.toString(global));
        for(String s: words1)
        {
            boolean flag=false;
            int present[]=new int[26];
            for(char c:s.toCharArray())
            {
                present[c-'a']+=1;
            }
            for(int i=0;i<26;i++)
            {
                if(global[i] > present[i])
                {
                    flag=true ;
                    break;
                }
            }
                if(!flag)
                    res.add(s);
        }
        return res;
    }
}
