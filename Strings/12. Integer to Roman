/*
12. Integer to Roman
https://leetcode.com/problems/integer-to-roman/

Logic :
    put the possiblities into the treemap like 
        I             1
        V             5
        X             10
        L             50
        C             100
        D             500
        M             1000 
        and also 
        I can be placed before V (5) and X (10) to make 4 and 9. 
        X can be placed before L (50) and C (100) to make 40 and 90. 
        C can be placed before D (500) and M (1000) to make 400 and 900.
    and use the treemap method called map.floorKey() to  get the nearest least number and store that sequence into ans
        
*/

class Solution {
    public String intToRoman(int num) {
        
        StringBuilder ans=new StringBuilder();
        TreeMap<Integer,String> map= new TreeMap<>();
        map.put(1,"I");
        map.put(5,"V");
        map.put(10,"X");
        map.put(50,"L");
        map.put(100,"C");
        map.put(500,"D");
        map.put(1000,"M");
        map.put(4,"IV");
        map.put(9,"IX");
        map.put(40,"XL");
        map.put(90,"XC");
        map.put(400,"CD");
        map.put(900,"CM");
        
        while(num > 0) {
            int val=map.floorKey(num);
            ans.append(map.get(val));
            num-=val;
        }
        return ans.toString();
        
    }
}
